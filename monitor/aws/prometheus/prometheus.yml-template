# scrape_interval controls frequency of scraping targets
# evaluation_interval controls how often the prometheus rules are evaluated against target data
global:
  scrape_interval:     1m
  scrape_timeout:      1m
  evaluation_interval: 1m


# Specify the location of rules we want prometheus to load
rule_files:
  - 'alert.rules.yml'


# prometheus has a dependency on alertmanager, as defined in docker_compose.yml
alerting:
  alertmanagers:
  - scheme: http
    static_configs:
    - targets:
      - "${ALERTMANAGER_SERVICE_NAME}:9093"


# Define which resources prometheus should monitor
scrape_configs:
  - job_name: 'node_exporter'
    static_configs:
      - targets:
        - "${PROMETHEUS_SERVICE_NAME}:9100"
        - "${FC_PROMETHEUS_SERVICE_NAME}:9100"
        - "${AC_PROMETHEUS_SERVICE_NAME}:9100"
#        - "${DC_PROMETHEUS_SERVICE_NAME}:9100"

  - job_name: 'federate'
    scrape_interval: 20s
    honor_labels: true
    metrics_path: '/federate'
    params:
      'match[]':
        - '{job="npld-heritrix-workers"}'
        - '{job="bypm-heritrix-workers"}'
        - '{job="kafka"}'
#        - '{job="npld-dc-heritrix-worker"}'
        - '{job="kafka-1"}'
    static_configs:
      - targets:
        - "${FC_PROMETHEUS_SERVICE_NAME}:9191"
#        - "${DC_PROMETHEUS_SERVICE_NAME}:9191"
